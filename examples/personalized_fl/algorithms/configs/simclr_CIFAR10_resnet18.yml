clients:

    # The total number of clients
    total_clients: 10

    # The number of clients selected in each round
    per_round: 2

    # Should the clients compute test accuracy locally?
    do_test: false

    random_seed: 1

server:
    address: 127.0.0.1
    port: 8009
    do_test: false
    random_seed: 1

    # Should we simulate the wall-clock time on the server? Useful if max_concurrency is specified
    simulate_wall_time: true

data:
    # cifar10 non-iid distribution
    !include cifar10_ssl_noniid.yml

trainer:

    # The maximum number of training rounds
    rounds: 2

    # The maximum number of clients running concurrently
    max_concurrency: 2

    # The target accuracy
    target_accuracy: 0.94

    # Number of epoches for local training in each communication round
    epochs: 3
    batch_size: 128
    optimizer: SGD
    lr_scheduler: MultiStepLR
    loss_criterion: NTXentLoss

    # The machine learning model
    model_name: SimCLR
    encoder_name: resnet_18
    projection_hidden_dim: 2048
    projection_out_dim: 256


algorithm:
    # Aggregation algorithm
    type: fedavg_partial
    #  - STL10 (Image size=96)
    #  - CIFAR10 (Image size=32)
    #  - MNIST (Image size=28)
    data_transforms:
        train_transform:
            name: SimCLR
            parameters:
                input_size: 32

    global_modules_name:
        - encoder
        
    completion_modules_name:
        - projector
        
    personalization:

        # Number of epochs for local training in each communication round
        #   The batch size for the downstream task can be larger as it
        # does not utilize the
        epochs: 5
        batch_size: 32
        optimizer: SGD
        lr_scheduler: StepLR
        loss_criterion: CrossEntropyLoss

        model_type: general_multilayer
        model_name: linear_mlp

        logging_iteration_interval: 50
        logging_epoch_interval: 1
        model_logging_epoch_interval: 2

        # the ratio of clients participanting in training
        participant_clients_ratio: 1.0
        
        # whether load the personalized each round
        load_model_per_round: false

        # whether maintain and load the trained 
        # personalied model
        # set to be true, each client will load
        # the latest trained personalized model
        persist_personalized_model: False

        # do personalization 
        # for every `do_personalization_interval` rounds
        # set -1 to do personalized only after the final round
        do_personalization_interval: -1
        # total, participant, nonparticipant
        do_personalization_group: total


parameters:
    # ResNet-18 ssl training params
    !include resnet18_ssl_params.yml

results:
    # Write the following parameter(s) into a CSV
    types: round, accuracy, elapsed_time, round_time
    result_path: results/pfl-simclr

    

