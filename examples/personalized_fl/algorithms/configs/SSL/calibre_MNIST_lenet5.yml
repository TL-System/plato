clients:

    # The total number of clients
    total_clients: 10

    # The number of clients selected in each round
    per_round: 2

    # Should the clients compute test accuracy locally?
    do_test: false

    random_seed: 1

server:
    address: 127.0.0.1
    port: 8009
    do_test: false
    random_seed: 1

    # Should we simulate the wall-clock time on the server? Useful if max_concurrency is specified
    simulate_wall_time: true
    

data:
    # mnist non-iid distribution
    !include mnist_ssl_noniid.yml

trainer:
    # LeNet5 model with the basic trainer
    # The maximum number of training rounds
    rounds: 2

    # The maximum number of clients running concurrently
    max_concurrency: 2

    # The target accuracy
    target_accuracy: 0.94

    # Number of epoches for local training in each communication round
    epochs: 3
    batch_size: 128
    optimizer: SGD
    lr_scheduler: MultiStepLR
    loss_criterion: NTXentLoss

    # The machine learning model
    model_name: Calibre
    encoder_name: lenet5
    projection_hidden_dim: 2048
    projection_out_dim: 256

algorithm:
    # Aggregation algorithm
    type: fedavg_partial

    #  - STL10 (Image size=96)
    #  - CIFAR10 (Image size=32)
    #  - MNIST (Image size=28)
    data_transforms:
        train_transform:
            name: SimCLR
            parameters:
                input_size: 28

    global_modules_name:
        - encoder

    completion_modules_name:
        - projector

    # auxiliary_loss_criterions:
    #     - prototype_regularizers

    # auxiliary_loss_criterions_param:
    #     prototype_regularizers:
    #         temperature: 0.2
    
    # losses_weight:
    #     NTXentLoss: 0.6
    #     prototype_regularizers: 0.2
    #     meta_prototype_contrastive_representation_loss: 0.2

    losses_weight:
        NTXentLoss: 1.0
        # this loss contains two parts, including
        # l_p, l_n
        prototype_regularizers: 
            - 0.5
            - 0.6

    personalization:

        !include ssl_personalization.yml


parameters:
    # LeNet5 training params
    !include lenet5_ssl_params.yml

results:
    # Write the following parameter(s) into a CSV
    types: round, accuracy, elapsed_time, round_time
    result_path: results/pfl-simclr
