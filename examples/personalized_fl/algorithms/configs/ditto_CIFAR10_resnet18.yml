clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 10

    # The number of clients selected in each round
    per_round: 2

    # Should the clients compute test accuracy locally?
    do_test: true

    random_seed: 1

server:
    address: 127.0.0.1
    port: 8009
    do_test: false
    random_seed: 1

    # Should we simulate the wall-clock time on the server? Useful if max_concurrency is specified
    simulate_wall_time: true

data:
    # CIFAR-10 non-iid distribution
    !include cifar10_noniid.yml

trainer:
     # ResNet-18 model with the basic trainer
    !include basic_resnet18.yml

algorithm:
    # Aggregation algorithm
    type: fedavg

    # the chosen of lambda derives from 
    # the appendix D.2 of the paper and 
    # from the https://github.com/lgcollins/FedRep
    ditto_lambda: 1.0

    personalization:

        model_name: resnet_18

        # the ratio of clients participanting in training
        participating_clients_ratio: 1.0
        
        # whether load the personalized each round
        load_model_per_round: true
        
        # whether maintain and load the trained 
        # personalied model
        # set to be true, each client will load
        # the latest trained personalized model
        persist_personalized_model: True

        # do personalization 
        # for every `do_personalization_interval` rounds
        # set -1 to do personalized only after the final round
        do_personalization_interval: -1
        # total, participant, nonparticipant
        do_personalization_group: total


parameters:
    # ResNet-18 training params
    !include resnet18_params.yml

results:
    # Write the following parameter(s) into a CSV
    types: round, accuracy, elapsed_time, round_time
    result_path: results/ditto

