clients:
    # Type
    type: mistnet

    # The total number of clients
    total_clients: 1

    # The number of clients selected in each round
    per_round: 1

    # Should the clients compute test accuracy locally?
    do_test: false

    # Processors for outbound data payloads
    outbound_processors:
        - feature_randomized_response
        - feature_unbatch
        - outbound_feature_ndarrays

server:
    address: 127.0.0.1
    ping_timeout: 36000
    port: 8000

    # Processors for inbound data payloads
    inbound_processors:
        - inbound_feature_tensors

data:
    # The training and testing dataset
    datasource: YOLO
    data_params: ./configs/YOLO/helmet_data.yaml

    # Where the dataset is located
    data_path: ./data/helmet/
    train_path: ./data/helmet/helmet/images/train/
    test_path: ./data/helmet/helmet/images/val/

    # download command/URL
    download_urls: ["https://iqua.ece.toronto.edu/~bli/helmet.zip"]

    # number of training examples
    num_train_examples: 5457

    # number of testing examples
    num_test_examples: 607

    # number of classes
    num_classes: 2

    # image size
    image_size: 640

    # class names
    classes: ["head", "helmet"]
    # Number of samples in each partition
    partition_size: 5457

    # IID or non-IID?
    sampler: iid

trainer:
    # The type of the trainer
    type: yolov5

    # The maximum number of training rounds
    rounds: 1

    # The maximum number of clients running concurrently
    max_concurrency: 3

    # The target accuracy
    target_accuracy: 0.99

    # Number of epoches for local training in each communication round
    epochs: 10
    batch_size: 16
    optimizer: SGD
    linear_lr: false

    # The machine learning model
    model_name: yolov5
    model_config: ./configs/YOLO/helmet_yolov5s.yaml
    train_params: packages/yolov5/yolov5/data/hyps/hyp.scratch.yaml

algorithm:
    # Aggregation algorithm
    type: mistnet

    cut_layer: 4
    epsilon: 100
