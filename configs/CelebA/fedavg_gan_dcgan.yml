clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 1

    # The number of clients selected in each round
    per_round: 1

    # Should the clients compute test accuracy locally?
    do_test: false

server:
    address: 127.0.0.1
    port: 8000

    # At the end of each round, the server can choose to only send the global Generator
    # or Discriminator (or both or neither) model to the clients next round. Reference 
    # this for detail: https://deepai.org/publication/federated-generative-adversarial-learning
    # By default, both model will be sent to the clients.
    network_to_sync:
        generator: true
        discriminator: false

data:
    # The training and testing dataset
    datasource: CelebA

    # Only add face identity as labels for training
    celeba_targets:
        attr: false
        identity: true
    
    # Resize all images to 32x32; default is 64x64
    celeba_img_size: 64

    # Where the dataset is located
    data_path: data

    # Number of samples in each partition
    partition_size: 162770

    # IID or non-IID?
    sampler: iid

    # The concentration parameter for the Dirichlet distribution
    concentration: 0.5

    # The random seed for sampling data
    random_seed: 1

trainer:
    # The type of the trainer
    type: gan

    # The maximum number of training rounds
    rounds: 5

    # The maximum number of clients running concurrently
    max_concurrency: 3

    # The target accuracy
    target_accuracy: 0.94

    # Number of epoches for local training in each communication round
    epochs: 5
    batch_size: 128
    optimizer: Adam
    learning_rate: 0.0002
    weight_decay: 0.0

    # The machine learning model
    model_name: dcgan

algorithm:
    # Aggregation algorithm
    type: fedavg_gan
